import telebot
import random
import json
import os
import requests
from flask import Flask, request
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

TOKEN = "7852344235:AAHy7AZrf2bJ7Zo0wvRHVi7QgNASgvbUvtI"
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
OPENAI_API_URL = "https://api.openai.com/v1/chat/completions"

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–ª–æ–¥—ã –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ (–ª–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)
def load_cards(filename):
    try:
        with open(filename, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return []

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add(
    KeyboardButton("üîÆ –ü–æ—Å–ª–∞–Ω–∏–µ –¥–Ω—è"),
    KeyboardButton("üìö –ö–æ–ª–æ–¥—ã"),
    KeyboardButton("üß± –ü—Ä–∏—á–∏–Ω—ã"),
    KeyboardButton("üß† –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∫–∞—Ä—Ç—ã")
)

# –ü–æ–¥–º–µ–Ω—é –∫–æ–ª–æ–¥
deck_menu = ReplyKeyboardMarkup(resize_keyboard=True)
deck_menu.add(
    KeyboardButton("üßø –ê—Ä—Ö–µ—Ç–∏–ø—ã"),
    KeyboardButton("ü™∂ –ú—É–¥—Ä–æ—Å—Ç—å"),
    KeyboardButton("üåÄ –ü—Ä–æ—Ü–µ—Å—Å—ã"),
    KeyboardButton("üêæ –ü–æ—Å–ª–∞–Ω–∏—è –∑–≤–µ—Ä–µ–π"),
    KeyboardButton("üêÖ –ñ–∏–≤–æ—Ç–Ω—ã–µ —Å–∏–ª—ã"),
    KeyboardButton("üßö –°–∫–∞–∑–æ—á–Ω—ã–µ –≥–µ—Ä–æ–∏"),
    KeyboardButton("üéØ –§–æ–∫—É—Å –≤–Ω–∏–º–∞–Ω–∏—è"),
    KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
)

# –ü–æ–¥–º–µ–Ω—é –ø—Ä–∏—á–∏–Ω
reason_menu = ReplyKeyboardMarkup(resize_keyboard=True)
reason_menu.add(
    KeyboardButton("üî• –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è"),
    KeyboardButton("üò± –°—Ç—Ä–∞—Ö–∏"),
    KeyboardButton("üí´ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è"),
    KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
)

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
awaiting_interpretation = set()

# –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∫–∞—Ä—Ç—ã AI
@bot.message_handler(func=lambda m: m.text == "üß† –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∫–∞—Ä—Ç—ã")
def ai_mode(message):
    awaiting_interpretation.add(message.chat.id)
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∫–∞–∫ –ø—Å–∏—Ö–æ–ª–æ–≥, –∫–æ—É—á –∏ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –ø–æ –º–µ—Ç–∞—Ñ–æ—Ä–∞–º.")

@bot.message_handler(content_types=['photo'])
def handle_photo_for_ai(message):
    if message.chat.id not in awaiting_interpretation:
        return

    file_id = message.photo[-1].file_id
    awaiting_interpretation.remove(message.chat.id)

    prompt = (
        "–¢—ã ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥, –∫–æ—É—á –∏ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –ø–æ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–º—É. –ö–ª–∏–µ–Ω—Ç –ø—Ä–∏—Å–ª–∞–ª —Ç–µ–±–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–æ–π –∫–∞—Ä—Ç—ã."
        "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –µ—ë –≤–∏–¥–∏—à—å. –ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–π –º–µ—Ç–∞—Ñ–æ—Ä—ã, –æ–ø–∏—à–∏, –∫–∞–∫–∏–µ –≥–ª—É–±–∏–Ω–Ω—ã–µ —Å–º—ã—Å–ª—ã, –ø–æ–¥—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏, –æ–±—Ä–∞–∑—ã –∏ —Å–∏–º–≤–æ–ª—ã –æ–Ω–∞ –º–æ–∂–µ—Ç –æ—Ç—Ä–∞–∂–∞—Ç—å."
        "–ü–∏—à–∏ –º—è–≥–∫–æ, –±–µ—Ä–µ–∂–Ω–æ, –≥–ª—É–±–æ–∫–æ. –ü–æ–º–æ–≥–∏ –∫–ª–∏–µ–Ω—Ç—É —É–≤–∏–¥–µ—Ç—å —Ç–æ, —á—Ç–æ –æ–Ω –Ω–µ –æ—Å–æ–∑–Ω–∞—ë—Ç. –ó–∞–¥–∞–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ–≥–∞—é—â–∏–µ –µ–º—É –ø—Ä–æ—è—Å–Ω–∏—Ç—å —Å–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å."
    )

    response = requests.post(
        OPENAI_API_URL,
        headers={
            "Authorization": f"Bearer {OPENAI_API_KEY}",
            "Content-Type": "application/json"
        },
        json={
            "model": "gpt-3.5-turbo",
            "messages": [
                {"role": "system", "content": "–¢—ã –ø—Å–∏—Ö–æ–ª–æ–≥, –∫–æ—É—á, –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫. –¢—ã –≥–æ–≤–æ—Ä–∏—à—å –º–µ—Ç–∞—Ñ–æ—Ä–∞–º–∏ –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ—à—å –æ–±—Ä–∞–∑—ã."},
                {"role": "user", "content": prompt}
            ]
        }
    )

    if response.status_code == 200:
        answer = response.json()["choices"][0]["message"]["content"]
        bot.send_photo(message.chat.id, file_id)
        bot.send_message(message.chat.id, answer)
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

# /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å:",
        reply_markup=main_menu
    )

# –û—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ (–∫–æ–ª–æ–¥—ã, –ø—Ä–∏—á–∏–Ω—ã, –ø–æ—Å–ª–∞–Ω–∏–µ –¥–Ω—è) –æ—Å—Ç–∞—ë—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ‚Äî —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ–¥.

# Webhook (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return "OK", 200

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"https://{os.environ['RENDER_EXTERNAL_HOSTNAME']}/{TOKEN}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

