import telebot
import random
import json
import os
from flask import Flask, request
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

TOKEN = "7852344235:AAHy7AZrf2bJ7Zo0wvRHVi7QgNASgvbUvtI"
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–ª–æ–¥—ã

def load_cards(filename):
    try:
        with open(filename, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return []

cards = load_cards("cards.json")
wise_cards = load_cards("wise_cards.json")
process_cards = load_cards("processes.json")
wise_animals = load_cards("wise_animales.json")
power_animals = load_cards("power_animals.json")
fokus_cards = load_cards("focus_cards.json")
fairy_cards = load_cards("fairytale_heroes.json")
transform_cards = load_cards("transformation.json")
fear_cards = load_cards("fears.json")
blessing_cards = load_cards("blessings.json")

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add(
    KeyboardButton("üîÆ –ü–æ—Å–ª–∞–Ω–∏–µ –¥–Ω—è"),
    KeyboardButton("üìö –ö–æ–ª–æ–¥—ã"),
    KeyboardButton("üß≠ –¢–µ—Ö–Ω–∏–∫–∏"),
    KeyboardButton("‚ú® –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è")
)

# –ü–æ–¥–º–µ–Ω—é –∫–æ–ª–æ–¥
deck_menu = ReplyKeyboardMarkup(resize_keyboard=True)
deck_menu.add(
    KeyboardButton("üßø –ê—Ä—Ö–µ—Ç–∏–ø—ã"),
    KeyboardButton("ü™∂ –ú—É–¥—Ä–æ—Å—Ç—å"),
    KeyboardButton("üåÄ –ü—Ä–æ—Ü–µ—Å—Å—ã"),
    KeyboardButton("üêæ –ü–æ—Å–ª–∞–Ω–∏—è –∑–≤–µ—Ä–µ–π"),
    KeyboardButton("üêÖ –ñ–∏–≤–æ—Ç–Ω—ã–µ —Å–∏–ª—ã"),
    KeyboardButton("üßö –°–∫–∞–∑–æ—á–Ω—ã–µ –≥–µ—Ä–æ–∏"),
    KeyboardButton("üéØ –§–æ–∫—É—Å –≤–Ω–∏–º–∞–Ω–∏—è"),
    KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
)

# –ü–æ–¥–º–µ–Ω—é —Ç–µ—Ö–Ω–∏–∫
technique_menu = ReplyKeyboardMarkup(resize_keyboard=True)
technique_menu.add(
    KeyboardButton("üéØ –ú–æ—è —Ü–µ–ª—å"),
    KeyboardButton("‚ù§Ô∏è –û—Ç–Ω–æ—à–µ–Ω–∏—è"),
    KeyboardButton("üß¨ –°–∏–º–ø—Ç–æ–º"),
    KeyboardButton("ü™® –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–±–ª–µ–º—ã"),
    KeyboardButton("üåø –†–µ—Å—É—Ä—Å"),
    KeyboardButton("üîÄ –í—ã–±–æ—Ä"),
    KeyboardButton("‚úÖ –î–∞ –∏–ª–∏ –ù–µ—Ç"),
    KeyboardButton("üö∂ –ú–æ–∏ —à–∞–≥–∏"),
    KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
)

# –ü–æ–¥–º–µ–Ω—é –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–π
extras_menu = ReplyKeyboardMarkup(resize_keyboard=True)
extras_menu.add(
    KeyboardButton("üî• –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è"),
    KeyboardButton("üò± –°—Ç—Ä–∞—Ö–∏"),
    KeyboardButton("üí´ –ë–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏—è"),
    KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
)

# /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å:",
        reply_markup=main_menu
    )

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(func=lambda m: m.text == "üìö –ö–æ–ª–æ–¥—ã")
def show_decks(message):
    bot.send_message(
        message.chat.id,
        "–ó–∞–¥—É–º–∞–π—Å—è –Ω–∞–¥ —Å–≤–æ–∏–º –∑–∞–ø—Ä–æ—Å–æ–º. –í—ã–±–µ—Ä–∏ –∫–æ–ª–æ–¥—É –∏ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–µ, –¥–µ—Ä–∂–∞ –≤ –≥–æ–ª–æ–≤–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å. –¢—ã –ø–æ–ª—É—á–∏—à—å –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç.",
        reply_markup=deck_menu
    )

@bot.message_handler(func=lambda m: m.text == "üß≠ –¢–µ—Ö–Ω–∏–∫–∏")
def show_techniques(message):
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏ —Ç–µ—Ö–Ω–∏–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ä—Ç–∞–º–∏:",
        reply_markup=technique_menu
    )

@bot.message_handler(func=lambda m: m.text == "‚ú® –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è")
def show_extras(message):
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ:",
        reply_markup=extras_menu
    )

@bot.message_handler(func=lambda m: m.text == "üîÆ –ü–æ—Å–ª–∞–Ω–∏–µ –¥–Ω—è")
def daily_message(message):
    all_cards = cards + wise_cards + process_cards + wise_animals + power_animals + fokus_cards + fairy_cards
    card = random.choice(all_cards)
    if "file_ids" in card:
        for file_id in card["file_ids"]:
            bot.send_photo(message.chat.id, file_id)
    elif "file_id" in card:
        bot.send_photo(message.chat.id, card["file_id"])
    elif "text" in card:
        bot.send_message(message.chat.id, card["text"])
    bot.send_message(message.chat.id, "–≠—Ç–∞ –∫–∞—Ä—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ, —á—Ç–æ –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å —Ç–µ–±–µ –≤–∞–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å, –ø–æ–Ω—è—Ç—å. –≠—Ç–æ –ø–æ—Å–ª–∞–Ω–∏–µ —Ç–µ–±–µ. –ö–∞–∫–æ–µ –æ–Ω–æ? –ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç —Ç–µ–±–µ —ç—Ç–∞ –∫–∞—Ä—Ç–∞?")

# –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(func=lambda m: m.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
def go_back(message):
    bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

# –ö–æ–ª–æ–¥–∞: –°–∫–∞–∑–æ—á–Ω—ã–µ –≥–µ—Ä–æ–∏
@bot.message_handler(func=lambda m: m.text == "üßö –°–∫–∞–∑–æ—á–Ω—ã–µ –≥–µ—Ä–æ–∏")
def handle_fairy(message):
    if not fairy_cards:
        bot.send_message(message.chat.id, "–ö–æ–ª–æ–¥–∞ –ø—É—Å—Ç–∞ üßö")
        return
    card = random.choice(fairy_cards)
    if "file_id" in card:
        bot.send_photo(message.chat.id, card["file_id"])
    else:
        bot.send_message(message.chat.id, card.get("text", "–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞"))

# –ö–æ–ª–æ–¥–∞: –§–æ–∫—É—Å –≤–Ω–∏–º–∞–Ω–∏—è
@bot.message_handler(func=lambda m: m.text == "üéØ –§–æ–∫—É—Å –≤–Ω–∏–º–∞–Ω–∏—è")
def handle_focus(message):
    if not fokus_cards:
        bot.send_message(message.chat.id, "–ö–æ–ª–æ–¥–∞ –ø—É—Å—Ç–∞ üéØ")
        return
    card = random.choice(fokus_cards)
    if "file_id" in card:
        bot.send_photo(message.chat.id, card["file_id"])
    else:
        bot.send_message(message.chat.id, card.get("text", "–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞"))

# –ö–æ–ª–æ–¥–∞: –ú—É–¥—Ä–æ—Å—Ç—å
@bot.message_handler(func=lambda m: m.text == "ü™∂ –ú—É–¥—Ä–æ—Å—Ç—å")
def handle_wisdom(message):
    if not wise_cards:
        bot.send_message(message.chat.id, "–ö–æ–ª–æ–¥–∞ –ø—É—Å—Ç–∞ ü™∂")
        return
    card = random.choice(wise_cards)
    if "text" in card:
        bot.send_message(message.chat.id, card["text"])
    else:
        bot.send_message(message.chat.id, "–ö–∞—Ä—Ç–∞ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞")

# –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è: —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è, —Å—Ç—Ä–∞—Ö–∏, –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏—è
@bot.message_handler(func=lambda m: m.text == "üî• –ù–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è")
def handle_transform(message):
    if not transform_cards:
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π –ø—É—Å—Ç üî•")
        return
    text = random.choice(transform_cards).get("text", "")
    bot.send_message(message.chat.id, f"üî• –ù–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è:
{text}")

@bot.message_handler(func=lambda m: m.text == "üò± –°—Ç—Ä–∞—Ö–∏")
def handle_fears(message):
    if not fear_cards:
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞—Ö–æ–≤ –ø—É—Å—Ç üò±")
        return
    text = random.choice(fear_cards).get("text", "")
    bot.send_message(message.chat.id, f"üò± –¢–≤–æ–π —Å—Ç—Ä–∞—Ö:
{text}")

@bot.message_handler(func=lambda m: m.text == "üí´ –ë–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏—è")
def handle_blessings(message):
    if not blessing_cards:
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–π –ø—É—Å—Ç üí´")
        return
    text = random.choice(blessing_cards).get("text", "")
    bot.send_message(message.chat.id, f"üí´ –ë–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ:
{text}")

# –ö–æ–ª–æ–¥–∞: –ü—Ä–æ—Ü–µ—Å—Å—ã
@bot.message_handler(func=lambda m: m.text == "üåÄ –ü—Ä–æ—Ü–µ—Å—Å—ã")
def handle_processes(message):
    if not process_cards:
        bot.send_message(message.chat.id, "–ö–æ–ª–æ–¥–∞ –ø—É—Å—Ç–∞ üåÄ")
        return
    card = random.choice(process_cards)
    if "file_id" in card:
        bot.send_photo(message.chat.id, card["file_id"])

# –ö–æ–ª–æ–¥–∞: –ü–æ—Å–ª–∞–Ω–∏—è –∑–≤–µ—Ä–µ–π
@bot.message_handler(func=lambda m: m.text == "üêæ –ü–æ—Å–ª–∞–Ω–∏—è –∑–≤–µ—Ä–µ–π")
def handle_animals(message):
    if not wise_animals:
        bot.send_message(message.chat.id, "–ö–æ–ª–æ–¥–∞ –ø—É—Å—Ç–∞ üêæ")
        return
    card = random.choice(wise_animals)
    if "file_id" in card:
        bot.send_photo(message.chat.id, card["file_id"])

# –ö–æ–ª–æ–¥–∞: –ñ–∏–≤–æ—Ç–Ω—ã–µ —Å–∏–ª—ã
@bot.message_handler(func=lambda m: m.text == "üêÖ –ñ–∏–≤–æ—Ç–Ω—ã–µ —Å–∏–ª—ã")
def handle_power_animals(message):
    if not power_animals:
        bot.send_message(message.chat.id, "–ö–æ–ª–æ–¥–∞ –ø—É—Å—Ç–∞ üêÖ")
        return
    card = random.choice(power_animals)
    if "file_id" in card:
        bot.send_photo(message.chat.id, card["file_id"])

# Webhook
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return "OK", 200

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"https://{os.environ['RENDER_EXTERNAL_HOSTNAME']}/{TOKEN}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
